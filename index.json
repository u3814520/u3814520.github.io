[{"categories":["生活儀式感"],"contents":"記得我8歲時，爸爸買了一支手錶給哥哥，\n我看到了，也跟爸爸要錶，\n盧了好久，爸爸不肯(也許覺得我是女生、也許覺得我還小..總之原因不明)，\n最後爸爸說:你段考數學考100分，我就買給你。\n這也是我人生第一次數學考一百分，\n於是我有了人生第一支錶，\n雖然它是夜市的499元卡西歐電子錶，\n也許對有些人來說，錶是裝飾品，\n對我來說:它是得來不易的東西。\n我也從8歲戴到17歲，\n有一天它壞了，廠商沒有零件了，我才換新錶，\n從17歲到23歲，我都戴著人生第二支手錶，\n也不是很貴的卡西歐電子錶，\n直到它壞掉\u0026hellip;\n從23歲27歲我戴了瑞士錶-歐星的陶瓷錶，\n它是我第一支破萬元的手錶，\n也是戴到錶爆了，沒得修了，我才換錶，\n因為科技的改變，我第一次嘗試智慧手錶，Apple Watch 第六代，\n經過631天的佩戴，(正看到這裡的你..答應我，不要算出年齡XD)\n每天充電太麻煩了，戴回指針錶吧~\n堅持要瑞士機芯的我，\n天梭潛水機械錶來吧~\n對了!!不要問我多少錢!我不想記得!!哈哈~\n第一次在內湖百貨公司逛專櫃，\n專櫃說沒進這款貨，後來我打電話預約板橋大遠百裡的分店，說賣完要進貨，\n等了3天，終於到貨了!\n20幾年來，每天都戴著錶的我，好幾天沒有錶，好難受!!!!\n哈哈哈!!終於買到了~\n","permalink":"https://u3814520.github.io/blog/watch/","tags":["生活儀式感"],"title":"巧庭與錶的故事"},{"categories":["單車挑戰"],"contents":"在2021年接近尾聲的時候，疫情也趨緩，\n聖誕節呢！參加了捷安特旅行社花東單車之旅~~\n●行程天數:三天兩夜\n●總公里數:126公里\n●級別:休閒級(不要想說會減肥的行程喔)\n●集合地點:花蓮捷安特門市\n●裝備:捷安特提供租借(腳踏車、安全帽)、附贈頭巾、水壺、雨衣\n●備註:一路都有導遊、領隊、領騎、壓隊跟著同行\n那就從第一天開始說起囉~\n☂第一天 花蓮光復\u0026ndash;\u0026gt;花蓮瑞穗 27公里 到了花蓮捷安特門市後，\n先搭著巴士到花蓮光復領取腳踏車，並說明腳踏車如何使用，和介紹工作人員\n試騎100公尺就到了欣綠農園吃午餐啦！(主要是確認腳踏車沒有問題)\n吃飽後，在欣綠農園逛了一下，就正式來囉~\n對了！捷安特的隨行車上有許多補給品可以食用！\n☂第一天⋄第二站-花蓮觀光糖廠 到了糖廠工作人員已經買好一人一支冰棒，就繼續吃~\n因為吃完冰後，開始下起小雨，大家都變小小兵了！\n☂第一天⋄第三站-大農大富平地森林園區 不同的月份有不同的花可以觀賞，\n還有TAIWAN的字樣..等園藝造景，是拍照打卡好地點，\n同行的人(含工作人員)有39人，就在這拍下第一張團體照囉~\n☂第一天⋄第四站-富源火車站 對富源火車站的印象是..圍牆有彩繪、有復古的感覺，還有..去上廁所的XD\n☂第一天⋄第五站-椰子林溫泉飯店♨ 第一天完成！！花蓮光復\u0026ndash;\u0026gt;花蓮瑞穗☆27公里☆\n   ☀第二天 花蓮瑞穗\u0026ndash;\u0026gt;台東池上 62公里 ☀第二天⋄第一站-吉蒸牧場 早上在椰子林溫泉飯店吃完早餐後，\n到了第一站，繼續吃喝吉蒸牧場的鮮奶和炸饅頭，\n我是喝不出差別啦！但好喝！！\n第二天開始體會到導遊一開始說的\u0026lt;不要想說會減肥的行程喔\u0026gt;\n☀第二天⋄第二站-花蓮觀音里 中途上廁所，舒緩鐵屁股的行程XD\n☀第二天⋄第三站-歐亞及菲律賓板塊交界 長知識了，原來台灣有一個歐亞板塊及菲律賓海板塊交界的地方~\n☀第二天⋄第四站-潘媽媽客家美食 老闆娘人超好的，怕我們吃不飽，一直加菜給我們，還很好吃耶!\n☀第二天⋄第五站-伊入柑布農部落遊憩區 第二天有62公里，總算快到台東了，\n花蓮占地真的好長喔XD\n騎了好久，打開地圖APP，還在花蓮..\n體能也差不多有感覺運動了！\n既然都來花東騎腳踏車了，沒有跟193環線拍照怎麼行呢?\n☀第二天⋄第六站-台糖池上牧野渡假村 終於到台東啦✌\n真的覺得捷安特旅行社很用心，\n從吃、住、行程安排、服務，真的感受到滿滿的用心，\n第二天完成！！花蓮瑞穗\u0026ndash;\u0026gt;台東池上☆62公里☆\n   ☀第三天 台東池上\u0026ndash;\u0026gt;台東關山 37公里 台糖池上牧野渡假村超大的，\n還有很多動物可以看，\n一早吃完早餐就看看動物，\n天氣涼爽、沒有下雨、又不會太炎熱，是蠻幸運的一天，\n覺得是可以再來訪的渡假村，\n☀第三天⋄第一站-伯朗大道 來到這裡當然是要跟金城武樹拍照，\n說真的，伯朗大道跟天堂路，我還真分不清楚，\n一樣都很漂亮、讓人放鬆的地方，\n平日還是人好多，也許是聖誕節吧?\n拍照都要排隊，\n☀第三天⋄第二站-池上大坡池 姜太公釣魚願者上鉤，真想知道最後真的有釣到魚嗎?\n☀第三天⋄第三站-池上田媽媽餐廳 餐廳外有米寶寶的造景和裝置藝術可以拍照打卡，\n面積也很大，吃飽走一走，很chill的感覺~\n真的一路吃好吃滿XD\n☀第三天⋄第四站-花蓮富里鄉農會「富里稻草藝術季」 運氣很好的是，參加的行程期間，\n花蓮富里鄉農會正在舉辦一年一度的「富里稻草藝術季」\n非常多大猩猩、和侏儸紀的稻草藝術，也是拍拍照走走的好地方，\n☀第三天⋄第五站-關山米國學校 這裡特色的地方就是有介紹製米的過程，\n還有迷宮、買伴手禮的地方，\n因為有行李車跟隨，不用擔心買了一堆東西沒辦法繼續騎腳踏車~\n☀第三天⋄第六站-關山親水公園 因為等等就要到火車站結束三天兩夜的單車行程了，\n領隊帶大家到關山親水公園空地，\n導遊還是要工商時間一下啦~\n捷安特旅行社服務這麼好，親朋好友都會道相報的啦~\n☀第三天⋄第七站-關山火車站 終於完成126公里的花東單車之旅！\n歸還腳踏車、安全帽、發便當，準備搭火車回家囉~\n真的是很棒的回憶！\n最後還有一支在伯朗大道的影片\n台東真的好遠XD\n就這樣摳囉~摳囉~摳囉~的搭火車回台北了！\n","permalink":"https://u3814520.github.io/blog/bicycle126km/","tags":["單車挑戰"],"title":"[單車之旅]花蓮光復-台東關山 126公里"},{"categories":["轉職心路歷程"],"contents":"從2021年07月07日開訓，到2021年12月09日終於於結訓啦～\n專題題目：BOOK私藝-書籍推薦系統\n專題動機：網路上相同主題書籍很多，但要找到適合自己書籍，總是要翻遍許多網站，對使用者耗時不便。\n 補充一個小故事吧~~\n當時因為同學們都很積極學習，聊天時，都會討論最近買了什麼關於程式語言的書，\n有一次有一個同學說：聽到天瓏書局的老闆在問為什麼沒有一個方便的找書系統?\n於是我們專題題目就出爐啦~~\n 功能導向：本專案設計採用依”個人化”面向切入，製作推薦適合書籍的功能，以滿足使用者的需求。\n專題宗旨：以簡單、不麻煩為核心信念，讓使用者輕鬆查書/找書。\n=====心得分享=====\n我在我們組裡，擔任的角色是組員，主要是做演算法與分析，\n其實是和另一個組員一起研究，當然那位同學比較厲害囉~~\n偶爾大家都會陷入迴圈裡，互相聊天一下，常常換個腦袋，問題就解決了，\n從大學畢業後，很久沒有一起做專題的感覺，做了專題，同學間的感情也增進了，\n說了這麼多，分享一下專題影片吧～\nlinebot book推薦系統 影片連結\n程式碼分享\n=====結訓後的面試心得=====\n先感謝緯育安排了結業面試，我知道我們是菜雞，\n我個人就一口氣面試了5間公司，\n每個人都有自己的優缺點，\n期許自己保持永遠學習的心態，補足自己缺點的地方\n大概就是\u0026hellip;先從學英文開始，不然什麼外商公司、科技大廠光就擋在門外囉～\n=====結業後，自拍一張=====\n=====成功拿到offer=====\n12/09結業，\n結算到12/28，超過10間以上的相關工作邀請，總共拿到2間公司的offer\n最後決定明年01/03正式去報到上班啦~\n感謝緯育!!\n當然也是自己夠努力，每一次有面試的邀約，都是一種這將近半年時間，我的努力被肯定了，\n拿到offer只是剛開始，未來的學習之路還很長。\n","permalink":"https://u3814520.github.io/blog/ai-big-data/","tags":["轉職數據分析師"],"title":"[AI Big Data班-專題發表]書籍推薦系統"},{"categories":["coding人生小筆記"],"contents":"SQL語法算是數據工程師或分析師，必備的技術吧~~\n在關聯式資料庫（RDB）中，資料庫下面可以許多張資料表（table），是由一個或一個以上的資料表所構成\n每個資料表的每一欄都代表一個屬性，每一列都代表一筆資料。\n小小筆記一下囉~~\n 圖形化介面:\n個人是使用Workbench 或 PopSQL\n安裝筆記就之後再看時間寫囉XD\n 水手範例 建立、刪除資料表 /* 建立sailors資料表，兩個欄位，sname為主鍵，字串型態(最多15字)，rating 為數字型態 */CREATETABLEsailors(snameVARCHAR(15)PRIMARYKEY,ratingINT);/* 為主鍵的其他寫法PRIMARY KEY(bname) */CREATETABLEboats(bnameVARCHAR(15),colorVARCHAR(10),ratingINT,PRIMARYKEY(bname));CREATETABLEdays(dayVARCHAR(15)PRIMARYKEY);/* 三種組合獨一無二 PRIMARY KEY(sname, bname, day), *//* FOREIGN KEY(外來鍵) 參照TABLE */CREATETABLEreservations(snameVARCHAR(15)NOTNULL,bnameVARCHAR(15),dayVARCHAR(15),PRIMARYKEY(sname,bname,day),FOREIGNKEY(sname)REFERENCESsailors(sname),FOREIGNKEY(bname)REFERENCESboats(bname),FOREIGNKEY(day)REFERENCESdays(day));/* 刪除資料表 */DROPTABLEreservations;DROPTABLEsailors,boats,days;新增資料 INSERTINTOsailorsVALUES(\u0026#39;Brutus\u0026#39;,1);INSERTINTOsailorsVALUES(\u0026#39;Andy\u0026#39;,8);INSERTINTOsailorsVALUES(\u0026#39;Horatio\u0026#39;,7);INSERTINTOsailorsVALUES(\u0026#39;Rusty\u0026#39;,8);INSERTINTOsailorsVALUES(\u0026#39;Bob\u0026#39;,1);INSERTINTOboatsVALUES(\u0026#39;SpeedQueen\u0026#39;,\u0026#39;white\u0026#39;,9);INSERTINTOboatsVALUES(\u0026#39;Interlake\u0026#39;,\u0026#39;red\u0026#39;,8);INSERTINTOboatsVALUES(\u0026#39;Marine\u0026#39;,\u0026#39;blue\u0026#39;,7);INSERTINTOboatsVALUES(\u0026#39;Bay\u0026#39;,\u0026#39;red\u0026#39;,3);INSERTINTOdaysVALUES(\u0026#39;Monday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Tuesday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Wednesday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Thursday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Friday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Saturday\u0026#39;);INSERTINTOdaysVALUES(\u0026#39;Sunday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Andy\u0026#39;,\u0026#39;Interlake\u0026#39;,\u0026#39;Monday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Andy\u0026#39;,\u0026#39;Bay\u0026#39;,\u0026#39;Wednesday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Andy\u0026#39;,\u0026#39;Marine\u0026#39;,\u0026#39;Saturday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Rusty\u0026#39;,\u0026#39;Bay\u0026#39;,\u0026#39;Sunday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Rusty\u0026#39;,\u0026#39;Interlake\u0026#39;,\u0026#39;Wednesday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Rusty\u0026#39;,\u0026#39;Marine\u0026#39;,\u0026#39;Wednesday\u0026#39;);INSERTINTOreservationsVALUES(\u0026#39;Bob\u0026#39;,\u0026#39;Bay\u0026#39;,\u0026#39;Monday\u0026#39;);查詢資料 /* WHERE(指定符合條件可寫可不寫) */\u0026#34;\u0026#34;\u0026#34; -- SELECT [DISTINCT] select-list -- FROM from-list -- WHERE qualification \u0026#34;\u0026#34;\u0026#34;SELECT*FROMsailors;SELECT*FROMboats;SELECT*FROMdays;SELECT*FROMreservations;SELECT*FROMsailorsWHERErating\u0026gt;5;SELECTCOUNT(*)FROMsailors;SELECTCOUNT(rating)FROMsailors;SELECTSUM(rating)FROMsailors;SELECTAVG(rating)FROMsailors;SELECTMAX(rating)FROMsailors;SELECTMIN(rating)FROMsailors;/* GROUP BY顏色為主，找出不同的顏色種類() */SELECT*FROMboatsGROUPBYcolor;/* GROUP BY顏色為主，並計數 */SELECTcolor,COUNT(*)FROMboatsGROUPBYcolor;/* ORDER BY查詢並依照順序 *//* 預設為遞增，DESC為遞減 */SELECT*FROMsailorsORDERBYrating;SELECT*FROMsailorsORDERBYratingDESC;範例查詢資料 /* 1. 列出所有在星期三預約的船名 跟它們的顏色 */SELECTb.bname,b.colorFROMboatsb,reservationsrWHEREb.bname=r.bnameANDr.day=\u0026#39;Wednesday\u0026#39;;/* 2. 列出最高評分的水手 *//* (i) 用 MAX */SELECTs.snameFROMsailorssWHEREs.rating\u0026gt;=(SELECTmax(rating)FROMsailors);/* 不用 MAX. *//* NOT EXISTS不需要，除外的 */SELECTs.snameFROMsailorssWHERENOTEXISTS(SELECTs2.snameFROMsailorss2WHEREs2.rating\u0026gt;s.rating);/* 3. 列出所有有在同一天預約船的水手名字，避免重複 */SELECTDISTINCTr1.sname,r2.snameFROMreservationsr1,reservationsr2WHEREr1.day=r2.dayANDr1.sname!=r2.sname;/* 4. 每一天，列出那天預約紅色船的數量。 如果那天沒紅色船被預約，數字應該是0，如果那一天完全沒有出現在預約表格裡， 那天數字也應該要是0。 */SELECTd.day,ifnull(sub.num,0)ASnumberFROMdaysdLEFTOUTERJOIN(SELECTr.day,COUNT(*)ASnumFROMboatsb,reservationsrWHEREb.bname=r.bnameANDb.color=\u0026#39;red\u0026#39;GROUPBYr.day)ASsubONd.day=sub.day;/* 5. 列出只有紅船被預約的那些天 */SELECTdistinctr.dayFROMboatsb,reservationsrWHEREb.bname=r.bnameANDb.color=\u0026#39;red\u0026#39;ANDNOTEXISTS(SELECTs.dayFROMreservationss,boatscWHEREc.bname=s.bnameANDs.day=r.dayANDc.color!=\u0026#39;red\u0026#39;);/* 6. 列出沒有紅船預約的天。如果那天沒出現在預約表格裡，也應該是0。 */SELECTd.dayFROMdaysdWHERENOTEXISTS(SELECTr.dayFROMboatsb,reservationsrWHEREb.bname=r.bnameANDb.color=\u0026#39;red\u0026#39;andr.day=d.day);/* 7. 列出全部紅船都被預約的天，如果不存在紅船，那每天都該吻合。 *//* – 使用 NOT IN */SELECTd1.dayFROMdaysd1WHEREdayNOTIN(SELECTd2.dayFROMdaysd2,boatsbWHEREb.color=\u0026#39;red\u0026#39;ANDb.bnameNOTIN(SELECTc.bnameFROMboatsc,reservationsrWHEREr.day=d2.dayANDc.bname=r.bname));/* 使用 NOT EXISTS */SELECTd.dayFROMdaysdWHERENOTEXISTS(SELECTb.bnameFROMboatsbWHEREb.color=\u0026#39;red\u0026#39;ANDNOTEXISTS(SELECTr.dayFROMreservationsrWHEREr.day=d.dayANDb.bname=r.bname));/* 使用 COUNT */SELECTd.dayFROMdaysdWHERE(SELECTcount(*)FROMboatsbWHEREb.color=\u0026#39;red\u0026#39;AND(SELECTcount(*)FROMreservationsrWHEREr.day=d.dayANDb.bname=r.bname)=0)=0;/* 8. 針對出現在預約表裡的天，列出那天所有水手的平均分數。 (小心重複的項目) */SELECTsub.DAY,AVG(sub.rat)AS\u0026#34;ave-rating\u0026#34;FROM(SELECTDISTINCTd.dayASDAY,s.sname,s.ratingASratFROMsailorss,reservationsr,daysdWHEREr.sname=s.snameANDd.day=r.day)subGROUPBYsub.DAY;/* 9. 列出最忙的一天，也就是最多預約的一天 */SELECTsub1.dayFROM(SELECTday,COUNT(*)ASrcountFROMreservationsGROUPBYday)sub1WHEREsub1.rcount\u0026gt;=(SELECTMAX(rcount)FROM(SELECTCOUNT(*)ASrcountFROMreservationsGROUPBYday)sub2);其他中文基礎語法教學網站：\nhttps://blog.techbridge.cc/2020/02/09/sql-basic-tutorial/\nhttps://www.fooish.com/sql/syntax.html\nhttps://www.1keydata.com/tw/sql/sql.html\n","permalink":"https://u3814520.github.io/blog/mysql/","tags":["coding人生小筆記"],"title":"[關聯式資料庫]MySQL-新增.修改.查詢.刪除"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 簡單來說呢!就是將兩個列表合併為一個排序列表。\nYou are given the heads of two sorted linked lists list1 and list2.\nMerge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.\nReturn the head of the merged linked list.\nExample 1:  Input: list1 = [1,2,4], list2 = [1,3,4]\nOutput: [1,1,2,3,4,4]\n Example 2:  Input: list1 = [], list2 = []\nOutput: []\n Example 3:  Input: list1 = [], list2 = [0]\nOutput: [0]\n Python解題筆記 Inline code has back-ticks around it.\n# Definition for singly-linked list. # class ListNode: # def __init__(self, val=0, next=None): # self.val = val # self.next = next class Solution: def mergeTwoLists(self, l1: Optional[ListNode], l2: Optional[ListNode]) -\u0026gt; Optional[ListNode]: def findMin(n1,n2): if n1 == None : return n2 if n2 == None : return n1 if n1.val \u0026lt; n2.val : n1.next = findMin(n1.next , n2) return n1 else: n2.next = findMin(n1,n2.next) return n2 return findMin(l1,l2) 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/merge-two-sorted-lists/","tags":["LeetCode刷題筆記"],"title":"Merge Two Sorted Lists -Python解題"},{"categories":["coding人生小筆記"],"contents":" Linux CentOS網卡消失不見   發現網卡不見了,只有lo卡  ifconfig  發現了網卡，但是沒有IP地址  ifconfig -a  解決辦法~~~   查看網卡訊息  sudo lshw -C network 找到logical name  例如:\nlogical name: ens33\n3.重新獲取IP地址\nsudo dhclient ens33 4.發現ens33又出現了，並且具有IP地址\nifconfig ","permalink":"https://u3814520.github.io/blog/linuxip/","tags":["coding人生小筆記"],"title":"Linux CentOS網卡消失辦法"},{"categories":["單車挑戰"],"contents":"在2021年接近尾聲的時候，疫情也趨緩，聖誕節呢!安排了花東單車之旅~~\n因為全程121公里，所以這個週六，先來個暖身吧~~\n目標15公里，新莊幸福站-八里漁港。\n 感謝18年朋友，總是當我的人體Map (有妳真好)\n  出發前拍一張，新莊幸福站GO~  天氣真晴朗!一大清早的逆風吹亂了我的頭髮，但吹不熄我的熱情XD\n大約經過了一個小時~關渡大橋在前方囉~\n早起運動精神好~~而且人潮不會太多喔~\n抵達~\n逛個八里老街，去古典玫瑰花園喝個下午茶再離開囉~\n暖身結束後，搭渡船到淡水，再搭捷運回家睡覺覺囉~\n期待著今年聖誕節的花東之旅了!!\n","permalink":"https://u3814520.github.io/blog/bali/","tags":["單車挑戰"],"title":"[單車之旅]新莊幸福站-八里漁港 15公里"},{"categories":["coding人生小筆記"],"contents":"檢測動機：  1.我家空氣清淨機到底有沒有效？XD\n  2.流行病學研究結果顯示， PM2.5易附著戴奧辛、多環芳香烴及重金屬等有害物質，長期吸入可能會引起過敏、氣喘、肺氣腫、肺癌、心血管疾病、肝癌、血液疾病等。\n google一番以下，程式碼分享： import serial import struct from datetime import datetime PORT = \u0026#39;COM3\u0026#39; # 每台電腦不一樣 UMPACK_PAT = \u0026#39;\u0026lt;ccHHHcc\u0026#39; with serial.Serial(PORT, 9600, bytesize=8, parity=\u0026#39;N\u0026#39;, stopbits=1) as ser: while True: data = ser.read(10) unpacked = struct.unpack(UMPACK_PAT, data) ts = datetime.now() pm25 = unpacked[2] / 10.0 pm10 = unpacked[3] / 10.0 print(f\u0026#39;{ts}: PM2.5 = {pm25},PM10 = {pm10}\u0026#39;) 注意事項 1.問題：\npip install serial 程式若無法執行\n解決辦法：\npip uninstall serial pip install pyserial python3建議先pip install pyserial\n2.問題：\nserial.serialutil.SerialException:系統找不到指定的檔案。\n解決辦法：\nPORT請先到裝置管理員的連接埠(COM和LPT)\n3.問題：\n連接埠(COM和LPT)找不到，且USB serial 找不到驅動程式\n解決辦法：\nSDS011插入USB孔後，到以下連結選取該作業系統並下載和安裝\n驅動程式下載\n","permalink":"https://u3814520.github.io/blog/sds011/","tags":["coding人生小筆記"],"title":"SDS011 PM2.5空氣檢測"},{"categories":["coding人生小筆記"],"contents":"1. 到GitHub網頁的右上角點選Fork 2.到終端機git clone下來 git clone \u0026lt;合作開發的Code的HTTPS(https://github.com/..../....git)\u0026gt; 3. 加入remote git remote -v (會看到自己的)\norigin https://github.com/u3814520/OpenCV_filters.git (fetch)\norigin https://github.com/u3814520/OpenCV_filters.git (push)\n4. 加入 \u0026lt;自己名稱\u0026gt; git remote add \u0026lt;自己名稱\u0026gt; https://github.com/u3814520/OpenCV_filters.git git fetch \u0026lt;自己名稱\u0026gt; 5. 新增檔案 git add . 6. 加入commit git commit -m \u0026#34;test\u0026#34; 7. 上傳上去 git push \u0026lt;自己名稱\u0026gt; =更新本地合作開發進度= 1. 加入對方remote git remote add \u0026lt;給對方名稱\u0026gt; https://github.com/\u0026lt;對方帳號\u0026gt;/OpenCV_filters.git 2. 到GitHub網頁按merge 3. 到git終端機更新本地資料 git pull ","permalink":"https://u3814520.github.io/blog/github-fork/","tags":["coding人生小筆記"],"title":"Git合作開發"},{"categories":["轉職心路歷程"],"contents":"轉職學習之路第四個月，來談談OpenCV，\n最近上課教了一些OpenCV效果，\n決定玩玩看結合在一支影片裡，\n想起去年聖誕節前的剪接師日子，剪接似曾相識的節目，其中一首是瑪麗亞凱莉的《All I Want For Christmas Is You》\n我覺得非常好聽，\n就用這首歌小玩玩看OpenCV吧~~\n  程式碼網址分享\n","permalink":"https://u3814520.github.io/blog/opencv/","tags":["轉職數據分析師"],"title":"OpenCV特效影片"},{"categories":["coding人生小筆記"],"contents":"========================\ngithub直接下載也可以 ========================\n1.新增兩個檔案 檔名為docker-compose.yml version: \u0026#39;2.2\u0026#39; services: es01: image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1 restart: on-failure container_name: es01 environment: - node.name=es01 - cluster.name=es-docker-cluster - discovery.seed_hosts=es02 - cluster.initial_master_nodes=es01,es02 - bootstrap.memory_lock=true - \u0026#34;ES_JAVA_OPTS=-Xms512m -Xmx512m\u0026#34; ulimits: memlock: soft: -1 hard: -1 volumes: - data01:/usr/share/elasticsearch/data ports: - 9200:9200 networks: - elastic es02: image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1 container_name: es02 depends_on: - \u0026#34;es01\u0026#34; restart: on-failure environment: - node.name=es02 - cluster.name=es-docker-cluster - discovery.seed_hosts=es01 - cluster.initial_master_nodes=es01,es02 - bootstrap.memory_lock=true - \u0026#34;ES_JAVA_OPTS=-Xms512m -Xmx512m\u0026#34; ulimits: memlock: soft: -1 hard: -1 volumes: - data02:/usr/share/elasticsearch/data ports: - 9201:9200 networks: - elastic kibana: image: docker.elastic.co/kibana/kibana:7.14.1 container_name: kibana depends_on: - \u0026#34;es02\u0026#34; restart: on-failure volumes: - ./kibana.yml:/usr/share/kibana/config/kibana.yml networks: - elastic ports: - 5601:5601 volumes: data01: driver: local data02: driver: local networks: elastic: driver: bridge 檔名為kibana.yml server.name: kibana server.host: 0.0.0.0 elasticsearch.hosts: [\u0026#34;http://es01:9200\u0026#34;, \u0026#34;http://es02:9200\u0026#34;] monitoring.enabled: true 2.輸入指令: docker-compose up 等待架設~~~~\n3.錯誤解決: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]  先要切換到root；\n  然後可以執行以下命令，設置 vm.max_map_count ，但是重啟後又會恢復為預設值。\n sysctl -w vm.max_map_count=262144  持久性的做法是在 /etc/sysctl.conf 文件中修改 vm.max_map_count 參數\n echo \u0026#34;vm.max_map_count=262144\u0026#34; \u0026gt; /etc/sysctl.conf sysctl -p 3.開啟瀏覽器:  PS.如果剛開始會出現error\n 等它跑一下後， 瀏覽器網址輸入:\nhttp://\u0026lt;IP位址\u0026gt;:9200/\n或是\nhttp://localhost:9200/\n出現以下這個畫面就是Elasticsearch伺服器啟動了~\n瀏覽器網址再輸入:\nhttp://\u0026lt;IP位址\u0026gt;:5601/\n或是\nhttp://localhost:5601/\n就可以進入到Kibana圖形化介面囉~~\n","permalink":"https://u3814520.github.io/blog/elasticsearch/","tags":["coding人生小筆記"],"title":"用 Docker 架設 Elasticsearch + Kibana"},{"categories":["coding人生小筆記"],"contents":" 官方文件說明  ======\n第一次打包要做的事 註冊並登入PYPI帳號\n1.到Account settings裡，新增API tokens\n2.複製 tokens\n3.在%HOMEPATH%目錄下新增.pypirc檔，並貼入以下文字(username = token 不用改)\n[pypi] username = __token__ password = \u0026lt;貼上 API tokens\u0026gt; =======如非第一次打包上傳，以上可以跳過======= ==================================================\n1.所需安裝的套件(有兩個套件) pip install twine pip install wheel  備註:如果專案裡有資料夾，每個資料夾都要有__init__.py檔案，才會被打包進去\n 2.新增setup.py檔: #!/usr/bin/env python # -*- coding: utf-8 -*- # Note: To use the \u0026#39;upload\u0026#39; functionality of this file, you must: # $ pipenv install twine --dev import io import os import sys from shutil import rmtree from setuptools import find_packages, setup, Command # Package meta-data. NAME = \u0026#39;WebCrawleEslite\u0026#39; # PYPY上的名稱 DESCRIPTION = \u0026#39;bookstore WebCrawle Eslite\u0026#39; # 短說明 URL = \u0026#39;https://github.com/test/test\u0026#39; # 專案網址 EMAIL = \u0026#39;test@gmail.com\u0026#39; # 信箱 AUTHOR = \u0026#39;chiao ting\u0026#39; # 作者 REQUIRES_PYTHON = \u0026#39;\u0026gt;=3.6.0\u0026#39; # python 版本 VERSION = \u0026#39;0.1.0\u0026#39; # 版本(更新版本需改變) # What packages are required for this module to be executed? # 專案需要哪些套件 REQUIRED = [ \u0026#39;requests\u0026#39;, \u0026#39;pandas\u0026#39;, \u0026#39;fake_useragent\u0026#39;,\u0026#39;bs4\u0026#39;, ] # What packages are optional? EXTRAS = { # \u0026#39;fancy feature\u0026#39;: [\u0026#39;django\u0026#39;], } # The rest you shouldn\u0026#39;t have to touch too much :) # 以下不需調整 # ------------------------------------------------ # Except, perhaps the License and Trove Classifiers! # If you do change the License, remember to change the Trove Classifier for that! here = os.path.abspath(os.path.dirname(__file__)) # Import the README and use it as the long-description. # Note: this will only work if \u0026#39;README.md\u0026#39; is present in your MANIFEST.in file! try: with io.open(os.path.join(here, \u0026#39;README.md\u0026#39;), encoding=\u0026#39;utf-8\u0026#39;) as f: # 有需要長版說明可以寫在README.md long_description = \u0026#39;\\n\u0026#39; + f.read() except FileNotFoundError: long_description = DESCRIPTION # Load the package\u0026#39;s __version__.py module as a dictionary. about = {} if not VERSION: project_slug = NAME.lower().replace(\u0026#34;-\u0026#34;, \u0026#34;_\u0026#34;).replace(\u0026#34; \u0026#34;, \u0026#34;_\u0026#34;) with open(os.path.join(here, project_slug, \u0026#39;__version__.py\u0026#39;)) as f: exec(f.read(), about) else: about[\u0026#39;__version__\u0026#39;] = VERSION class UploadCommand(Command): \u0026#34;\u0026#34;\u0026#34;Support setup.py upload.\u0026#34;\u0026#34;\u0026#34; description = \u0026#39;Build and publish the package.\u0026#39; user_options = [] @staticmethod def status(s): \u0026#34;\u0026#34;\u0026#34;Prints things in bold.\u0026#34;\u0026#34;\u0026#34; print(\u0026#39;\\033[1m{0}\\033[0m\u0026#39;.format(s)) def initialize_options(self): pass def finalize_options(self): pass def run(self): try: self.status(\u0026#39;Removing previous builds…\u0026#39;) rmtree(os.path.join(here, \u0026#39;dist\u0026#39;)) except OSError: pass self.status(\u0026#39;Building Source and Wheel (universal) distribution…\u0026#39;) os.system(\u0026#39;{0}setup.py sdist bdist_wheel --universal\u0026#39;.format(sys.executable)) self.status(\u0026#39;Uploading the package to PyPI via Twine…\u0026#39;) os.system(\u0026#39;twine upload dist/*\u0026#39;) self.status(\u0026#39;Pushing git tags…\u0026#39;) os.system(\u0026#39;git tag v{0}\u0026#39;.format(about[\u0026#39;__version__\u0026#39;])) os.system(\u0026#39;git push --tags\u0026#39;) sys.exit() # Where the magic happens: setup( name=NAME, version=about[\u0026#39;__version__\u0026#39;], description=DESCRIPTION, long_description=long_description, long_description_content_type=\u0026#39;text/markdown\u0026#39;, author=AUTHOR, author_email=EMAIL, python_requires=REQUIRES_PYTHON, url=URL, packages=find_packages(exclude=[\u0026#34;tests\u0026#34;, \u0026#34;*.tests\u0026#34;, \u0026#34;*.tests.*\u0026#34;, \u0026#34;tests.*\u0026#34;]), # If your package is a single module, use this instead of \u0026#39;packages\u0026#39;: # py_modules=[\u0026#39;mypackage\u0026#39;], # entry_points={ # \u0026#39;console_scripts\u0026#39;: [\u0026#39;mycli=mymodule:cli\u0026#39;], # }, install_requires=REQUIRED, extras_require=EXTRAS, include_package_data=True, license=\u0026#39;MIT\u0026#39;, classifiers=[ # Trove classifiers # Full list: https://pypi.python.org/pypi?%3Aaction=list_classifiers \u0026#39;License :: OSI Approved :: MIT License\u0026#39;, \u0026#39;Programming Language :: Python\u0026#39;, \u0026#39;Programming Language :: Python :: 3\u0026#39;, \u0026#39;Programming Language :: Python :: 3.6\u0026#39;, \u0026#39;Programming Language :: Python :: Implementation :: CPython\u0026#39;, \u0026#39;Programming Language :: Python :: Implementation :: PyPy\u0026#39; ], # $ setup.py publish support. cmdclass={ \u0026#39;upload\u0026#39;: UploadCommand, }, ) setup.py引用來源\n3.封裝:(有兩個指令須執行) python setup.py sdist  備註:執行出現 no module named \u0026lsquo;setuptools\u0026rsquo; 請執行ez_python.py\n python setup.py bdist_wheel 4.上傳到PYPI上 開啟CMD，到資料夾下輸入指令:\ntwine upload dist/* 完成後，複製View at:的網址\n就可以看到自己打包的專案了~\n*建立新的環境測試一下: pip install \u0026lt;自己打包的套件\u0026gt;\n就會發現py檔都在新建立的環境資料夾裡了\n=====打包前補充，不新增也不影響上傳打包=====\nLicense說明:\nhttps://choosealicense.com/\n  建立LICENSE.txt\n  複製許可證內容並在LICENSE.txt貼上\n  ","permalink":"https://u3814520.github.io/blog/pypi-packaging/","tags":["coding人生小筆記"],"title":"Python專案和套件打包-上傳PYPI"},{"categories":["轉職心路歷程"],"contents":"Python 資料分析＆機器學習入門_學習紀錄 在這自學的時代，\n最近剛學了Data Mining\n當然最近也才知道kaggle這個數據建模和數據分析競賽平臺，\n又搜尋到一個免費試看跟著影片做，從中學習的共享單車需求預測\n先貼kaggle競賽網址→ → → → Bike Sharing Demand ← ← ← ←\n除了使用Pandas與Numpy，還運用機器學習，\n這個教學實作範例是用隨機森林(RandomForestRegressor)，填補風速的空值\n最後輸出CSV檔，到kaggle繳交，有個分數(PS.我的第一個kaggle競賽成績)\n↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓\n請點單元16:免費試看-實作共享單車需求預測\ngithub-自我練習程式碼\n","permalink":"https://u3814520.github.io/blog/kagglebike/","tags":["轉職數據分析師"],"title":"kaggle-共享單車需求預測"},{"categories":["轉職心路歷程"],"contents":"進入滿滿程式碼的世界兩個月，\n最近又有一個小作品啦~~\n距離大學畢業後，再也沒有團隊合作做作業了，\n這是一個Azure的小作品\n  談談這個作品的故事吧~ 起初大家不知道要做什麼題目，\n在討論聊天的過程中，一位同學說了最近大樂透頭獎累積到27億，上課前去買了一張，\n這時另一位同學說:我們就來做大樂透對獎結合Azure圖像辨識，並在line bot呈現吧!!!\n架構(運用Azure課程中所教導的技術及知識):   Microsoft Azure - Computer vision影像辨識功能\n  Line Developer - 以Line Bot呈現至使用者服務端\n  Python - Flask - 作為服務後端，並以python語法串聯\n  Ngrok - 簡易可生成https服務\n  中間遇到的困難是:   圖像辨識有時會有小差錯，須調整影像色調測試。\n  圖像若拍攝稍有不清時，可能造成讀取辨識失敗。\n  Ngrok免費帳戶有流量限制，圖像不能傳送太快，否則會造成Error。\n  經過兩個禮拜時間，成品出來啦~~ 一點一點對程式碼的進步與了解，\n沒有基礎，每天除了吃飯、睡覺、洗澡，我都在程式碼世界裡了，\n儘管學習過程中，有些痛苦，就只要相信『沒有學不會的東西，只有不願意學的東西。』\nno pain no gain.期待未來更進步(在鼓勵自己XD)\n","permalink":"https://u3814520.github.io/blog/linebot/","tags":["轉職數據分析師"],"title":"line Bot 大樂透兌獎-Azure圖像辨識"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 如果字串中有相同類型的括號，就判斷為true，沒有則判斷為false。\nGiven a string s containing just the characters ' ( \u0026lsquo;, ' ) \u0026lsquo;, ' { \u0026lsquo;, ' } \u0026lsquo;, ' [ ' and ' ] \u0026lsquo;, determine if the input string is valid.\nAn input string is valid if:\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\nExample 1:  Input: s = \u0026ldquo;( )\u0026rdquo;\nOutput: true\n Example 2:  Input: s = \u0026ldquo;( )[ ]{ }\u0026rdquo;\nOutput: true\n Example 3:  Input: s = \u0026ldquo;( ]\u0026rdquo;\nOutput: false\n Example 4:  Input: s = \u0026ldquo;( [ ) ]\u0026rdquo;\nOutput: false\n Example 5:  Input: s = \u0026ldquo;{ [ ] }\u0026rdquo;\nOutput: true\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def isValid(self, s): temp=[\u0026#39;temp\u0026#39;] tempdist={\u0026#39;)\u0026#39;:\u0026#39;(\u0026#39;,\u0026#39;}\u0026#39;:\u0026#39;{\u0026#39;,\u0026#39;]\u0026#39;:\u0026#39;[\u0026#39;} for i in s: if i in tempdist and tempdist[i]==temp[len(temp)-1]: temp.pop() else: temp.append(i) return len(temp) == 1 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/valid-parentheses/","tags":["LeetCode刷題筆記"],"title":"Valid Parentheses -Python解題"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 在一系列字串中，找出相同的前綴字，如都沒有，則打印空字串。\nWrite a function to find the longest common prefix string amongst an array of strings.\nIf there is no common prefix, return an empty string \u0026ldquo;\u0026rdquo;.\nExample 1:  Input: strs = [\u0026ldquo;flower\u0026rdquo;,\u0026ldquo;flow\u0026rdquo;,\u0026ldquo;flight\u0026rdquo;]\nOutput: \u0026ldquo;fl\u0026rdquo;\n Example 2:  Input: strs = [\u0026ldquo;dog\u0026rdquo;,\u0026ldquo;racecar\u0026rdquo;,\u0026ldquo;car\u0026rdquo;]\nOutput: \u0026quot;\u0026quot;\nExplanation: There is no common prefix among the input strings.\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def longestCommonPrefix(self, strs): for i in range(len(strs[0])): for s in strs[1:]: if i\u0026gt;=len(s) or s[i] != strs[0][i] : return strs[0][:i] if not strs: return \u0026#34;\u0026#34; return strs[0] 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/longest-common-prefix/","tags":["LeetCode刷題筆記"],"title":"Longest Common Prefix -Python解題"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: x為整數，如果x前後都是一的數字就為Ture，反之為False。\nGiven an integer x, return true if x is palindrome integer.\nAn integer is a palindrome when it reads the same backward as forward. For example, 121 is palindrome while 123 is not.\nExample 1:  Input: x = 121\nOutput: true\n Example 2:  Input: x = -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n Example 3:  Input: x = 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n Example 4:  Input: x = -101\nOutput: false\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def isPalindrome(self, x): if x \u0026lt; 0: return False x = str(x) return x == x[::-1] 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/palindrome-number/","tags":["LeetCode刷題筆記"],"title":"Palindrome Number -Python解題"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 羅馬字轉換阿拉伯數字。\nRoman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\n   Symbol Value     I 1   V 5   X 10   L 50   C 100   D 500   M 1000    For example, 2 is written as II in Roman numeral, just two one\u0026rsquo;s added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\nI can be placed before V (5) and X (10) to make 4 and 9.\nX can be placed before L (50) and C (100) to make 40 and 90.\nC can be placed before D (500) and M (1000) to make 400 and 900.\nGiven a roman numeral, convert it to an integer.\nExample 1:  Input: s = \u0026ldquo;III\u0026rdquo;\nOutput: 3\n Example 2:  Input: s = \u0026ldquo;IV\u0026rdquo;\nOutput: 4\n Example 3:  Input: s = \u0026ldquo;IX\u0026rdquo;\nOutput: 9\n Example 4:  Input: s = \u0026ldquo;LVIII\u0026rdquo;\nOutput: 58\nExplanation: L = 50, V= 5, III = 3.\n Example 5:  Input: s = \u0026ldquo;MCMXCIV\u0026rdquo;\nOutput: 1994\nExplanation: M = 1000, CM = 900, XC = 90 and IV = 4.\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def romanToInt(self, s): result = 0; Rnum = {\u0026#39;I\u0026#39;:1,\u0026#39;V\u0026#39;:5,\u0026#39;X\u0026#39;:10,\u0026#39;L\u0026#39;:50,\u0026#39;C\u0026#39;:100,\u0026#39;D\u0026#39;:500,\u0026#39;M\u0026#39;:1000} for i in range(len(s)): if(Rnum[s[i]]): temp = Rnum[s[i]]; if(i != 0 and Rnum[s[i-1]] \u0026lt; Rnum[s[i]]): temp = temp - (Rnum[s[i-1]])*2; result = result + temp ; return result; 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/roman-to-integer/","tags":["LeetCode刷題筆記"],"title":"Roman to Integer -Python解題"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 簡單來說呢!就是將數字位置反轉。\nGiven a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).\nConstraints:  -231 \u0026lt;= x \u0026lt;= 231 - 1\n Example 1:  Input: x = 123\nOutput: 321\n Example 2:  Input: x = -123\nOutput: -321\n Example 3:  Input: x = 120\nOutput: 21\n Example 4:  Input: x = 0\nOutput: 0\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def reverse(self, x): num=0 a=abs(x) while(a != 0): temp = a % 10 num =num * 10 + temp a=int(a/10) if x\u0026gt;0 and num \u0026lt;2147483647: return num elif x \u0026lt; 0 and num \u0026lt;= 2147483647: return -num else: return 0 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/reverse-integer/","tags":["LeetCode刷題筆記"],"title":"Reverse Integer -Python解題"},{"categories":["LeetCode刷題筆記"],"contents":"困難度:Easy\n題目: 找出兩個數字的索引相加會等於目標數字。\nGiven an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\nExample 1:  Input: nums = [2,7,11,15], target = 9\nOutput: [0,1]\nOutput: Because nums[0] + nums[1] == 9\nwe return [0, 1].\n Example 2:  Input: nums = [3,2,4], target = 6\nOutput: [1,2]\n Example 3:  Input: nums = [3,3], target = 6\nOutput: [0,1]\n Python解題筆記 Inline code has back-ticks around it.\nclass Solution: def twoSum(self, nums, target): for i in range(0,len(nums)): for j in range(i+1,len(nums)): a = nums[i]+nums[j] if a == target: return [i,j] 題目原處-LeetCode\n","permalink":"https://u3814520.github.io/blog/two-sum/","tags":["LeetCode刷題筆記"],"title":"Two Sum -Python解題"},{"categories":["轉職心路歷程"],"contents":"我的第一支爬蟲程式『104人力銀行職缺爬蟲』\n沒有商科背景、沒有理工科背景，\n程式語言學了一個多月的時間，\n這算是我第一支完整的程式語言了吧~\n動機其實是爬蟲老師的作業啦!!\n寫了整整四天，終於完成啦!!\n真是感謝緯育TibaMe讓我能學習新的技能\n也感謝緯育TibaMe的python老師、爬蟲老師\nhttps://github.com/u3814520/work104\n","permalink":"https://u3814520.github.io/blog/104etl/","tags":["轉職數據分析師"],"title":"104人力銀行職缺爬蟲"},{"categories":["轉職心路歷程"],"contents":"求學過程都是跟設計、影視相關\n今年剛滿29歲，我做了決定，離職-轉職\n朝著數據分析師方向前進\n今年疫情嚴峻，這個決定是很大的決定，因為\n停止了收入，面對沒有收入的壓力，還有未來的不確定性\u0026hellip;\n考慮了很久，乾脆換個方向思考\n就趁疫情學習新技能吧!!!也許是一個新的寶藏!\nHello World.是學程式語言的第一句話\n感謝緯育TibaMe提供了我學習的環境\n7/7開課，至今已經一個多月了，\n起初天真的以為可以邊打工\n哈!但零基礎的我，學得好辛苦\u0026hellip;\n前兩個麗拜，學Python程式語言就感到挫折\n好幾個半夜都思考著:我做對選擇了嗎?\n不過學費有點貴，才剛開始，別輕言放棄!!\n既然當初都這麼有想法的決定轉職\n來吧!!拿出破釜沉舟的心~\n既然零基礎，就必須比別人更努力，更花時間讀書、學習\n半年的課程相信只是入門，陸陸續續買了很多書籍必須自修\n新人生解鎖的是:我既然辦了圖書館的借書證，第一次在圖書館借書。\n一個多月了，雖然有點困難，課程好滿，\n但開始覺得資訊產業蠻有趣的，\n相見恨晚啊!!!!怎麼大學沒選資工相關科系呢?!\n雖然我不知道半年後結果是什麼\u0026hellip;\n告訴自己:不論結果是什麼，全力以赴後，就順其自然。fighting!!\n","permalink":"https://u3814520.github.io/blog/data-analys/","tags":["轉職數據分析師"],"title":"Hello World.學習的第一句程式語言"},{"categories":["coding人生小筆記"],"contents":"先分享自己架網站的動機，\n其實一開始只是想找關於Github的教學，\n其中就搜尋到Github可以架設免費網站，\n就想起:曾經也想過架設一個自己的個人網站，選擇自己喜歡的樣式，分享自己的生活點滴，或是學習過程，\n不過很多都是要費用的，每年都需要付年費給主機商，了不起就是免費幾天試用而已，\n看到免費架站術這個關鍵字，就吸引我點進去了。\n重點重複一次：架設網頁是免費！免費！免費！ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓ ↓\n小小筆記一下操作\n  第一次到hugo官網挑喜歡的模板並下載\n  下載之後，到\u0026lt;資料夾路徑hugo\\exampleSite\\content\\blog\u0026gt;新增文章\n  (如果不知道怎麼新增文章，先下載自己習慣的原始碼編輯器(例如:Visual Studio Code或PyCharm..等等)就可以新增文章囉)\n 打開\u0026lt;資料夾路徑\\hugo\\exampleSite\u0026gt;的資料夾，顯示路徑的地方全選後，打上cmd\n  在cmd上輸入hugo server後，開啟瀏覽器，網址貼上http://localhost:1313/\n  (能即時看到更新喔~~~ PS.在cmd按下Ctrl+C可以停止)\n 停止後，在cmd上輸入hugo\n  到\u0026lt;資料夾路徑\\hugo\\exampleSite\\public\u0026gt; 複製所有內容\n  創建一個\u0026lt;自己命名.github.io\u0026gt;的資料夾(如:步驟8的資料夾路徑)\n  到\u0026lt;資料夾路徑\\hugo\\u3814520.github.io\u0026gt; 將步驟6所有內容貼上\n  到github網頁new repository\n  (Repository name必須跟步驟7的命名一樣喔)\n 電腦沒有git程式，請先下載\n  到hugo\\u3814520.github.io資料夾右鍵點選git bash，並輸入以下依序輸入步驟12.13.14的內容\n  git add .\n  git commit -m \u0026ldquo;輸入更新內容\u0026rdquo;\n  git push origin main\n  網址就誕生啦~~~\n  #### 封面圖片來源\n","permalink":"https://u3814520.github.io/blog/personal-website/","tags":["coding人生小筆記"],"title":"[分享]Github免費架設個人網站"},{"categories":["打工仔生活"],"contents":"今年疫情嚴峻，部分工作停擺，但該繳的費用不會停擺╥﹏╥\n🛵於是我決定加入外送員，做個兼差。\n身為現代人，當然先上網搜尋一下加入哪家外送平台的外送員好呢?\n好像多數人覺得foodpanda比較好(外送員的部分)\n也是覺得foodpanda有送生鮮雜貨，不限用餐時間也有單(當時是這麼想的啦~)\n前後大概花了一個禮拜的時間順利拿到當任外送員資格，終於可以上線啦~~💪\n上線前，我大概想像了好多好多外送時會遇到的情況，\n比如被開發單、不小心打翻食物、遇到奧客等等\n沒想到實際上線後，我是多慮了，\n消費者都是善良的啦🤗 今天是第一次收到foodpanda的薪水，特別興奮!!!!😁😁😁😁\n就來分享我的薪水明細吧~~~\n對了!!foodpanda是半個月發一次薪水哦~~ ","permalink":"https://u3814520.github.io/blog/deliverymen/","tags":["沒有人不愛錢"],"title":"兼差外送，找生路XD"},{"categories":["旅遊日記"],"contents":"大學畢業後，進入職場當社畜之後，懷念起臺南的味道\n尤其是美食\n今年起了轉職的念頭，離職後，出發吧!來去臺南\n搭著高鐵，看著車向外的風景，綠油油的草地，在都市的緊張都瞬間釋放了~😄😄😄\n感謝臺南的朋友當我的導遊\n 首先 第一天 第一站\n 宏品虱目魚 地址:台南市新市區中山路191號\n聽朋友說這可是正港的臺南味呢!!!\n 第二站\n 來到了臺南又芒果盛產季節，當然是玉井啦~~\n不過剛吃飽先去教堂走走吧~~💐\n玉井白色教堂 地址:台南市玉井區層林1之7號\n門票:150元，可以抵消費\n 第三站\n 吃芒果冰啦~~\n玉井有間冰舖芒果冰 地址:台南市玉井區中正路154號\n 第四站\n [懷念美食] 大學時期吃過最喜歡吃的美食就是嫩骨飯\n大豆豆嫩骨飯🥰 地址:台南市南區大同路二段186巷5弄12號\n 第五站\n 吃完了晚餐，沒有手搖飲，怎麼可以!!!\n紅太陽 好啦!!回民宿睡覺啦~~~\n悅 Ya B\u0026amp;B 地址:台南市東區裕豐街222巷43弄1號\n裡面我看什麼都有提供了吧~~\n👍貼心小物太多了~~PS.還有面膜呢!!!\n 第二天 首先\n 早起的鳥兒有蟲吃，先吃早餐\n阿堂鹹粥 地址:台南市中西區西門路一段728號\n 第二站\n 飽芝林關東煮 結果買的不是關東煮\n哈哈哈!可惜了!!下次再去買~\n地址:台南市東區東安路116號\n 第三站\n 阿龍杏仁茶 [懷念美食] 大學時期喝過最喜歡喝的美食\n地址:台南市永康區小東路583號\n厲害的地方在於手工熬煮，不是杏仁粉喔!!!\n一喝就跟一杯20塊的杏仁茶不一樣啦!!!\n😍😍😍😍第一次喝就愛上😍😍😍😍\n 第三天\n 舊來發餅舖 地址:台南市北區自強街15號\n[超級必買] 黑糖香餅帶回台北是一定要的\n唐家泡菜館 這間我是第一次吃，好多人排隊喔!!\n地址:台南市東區裕農路18號\n還有好多菜單還沒吃到，明年希望再來囉~~~\n","permalink":"https://u3814520.github.io/blog/tainan0518/","tags":["愛吃不會胖-可以嗎"],"title":"臺南耍廢三天之旅"},{"categories":["單車挑戰"],"contents":"我是個上班族，假日又兼差的愛錢工作狂 (哈哈哈哈哈哈\n但人生有個小小夢想\n騎單車環島 平常也沒有特別運動，所以先從短距離開始\n士林騎腳踏車到淡水 感謝我朋友當我的導遊\n哈哈哈~我是小路癡~\n其實是懶，跟人家走，不用研究路線 🤣🤣🤣\n出發前，拍一張\n加油~加油~~📣📣📣📣\n中途休息XDDDDD\n經過一個多小時\u0026hellip;..\n抵達 淡水金色水岸徒步區 最後還是要推薦一下我的淡水美食菜單\n半坪屋手工糯米腸 老鼠肉.糯米腸都超級超級好吃XD\n","permalink":"https://u3814520.github.io/blog/tamsuibicycle/","tags":["單車挑戰"],"title":"士林騎腳踏車到淡水"},{"categories":["生日快樂"],"contents":"今年生日前，就想說趁自己還年輕的時候，\n送自己一份紀念青春的生日禮物🎁\u0026ndash;個人寫真\u0026ndash;\n⭐️透過網路看了很多間婚紗店網站、評價、很多照片，\n最終決定到 Only You Wedding 唯你婚紗攝影拍\n📸原本打算在生日當天拍攝，不料遇上颱風，只好改期，\n過了這麼久，到拍攝完成，照片出來啦~~~💕\n💖感謝接待我、跟我聯絡時間的門市接待\u0026ndash;之之\n💖感謝陪我挑禮服，給我建議的依靜、草莓、禮服秘書-淳淳\n💖感謝陪我到拍攝現場的陳妍榛\n💖感謝幫我拍攝、化妝、動作指導的造型師-Kiki、攝影師-愛莉、燈光師-胡椒\n超專業的XD\n以下就放幾張照片吧~~~ ","permalink":"https://u3814520.github.io/blog/art-photos/","tags":["生活儀式感"],"title":"個人藝術照"}]